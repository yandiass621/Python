import sqlite3

# Passo 1: Conectar ao banco de dados (cria o arquivo se não existir)
conexao = sqlite3.connect('dados_vendas.db')

# Criar um cursor para executar comandos SQL
cursor = conexao.cursor()

# Criar a tabela 'vendas1' (se não existir)
cursor.execute('''
CREATE TABLE IF NOT EXISTS vendas1 (
    id_venda INTEGER PRIMARY KEY AUTOINCREMENT,
    data_venda DATE,
    produto TEXT,
    categoria TEXT,
    valor_venda REAL
)
''')

# Passo 2: Inserir dados (atenção: para evitar duplicação, comente essa parte se já executou antes)
cursor.executescript('''
INSERT INTO vendas1 (data_venda, produto, categoria, valor_venda) VALUES
('2024-01-01', 'Produto A', 'Eletrônicos', 1500.00),
('2024-01-05', 'Produto B', 'Roupas', 350.00),
('2024-02-10', 'Produto C', 'Eletrônicos', 1200.00),
('2024-03-15', 'Produto D', 'Livros', 200.00),
('2024-03-20', 'Produto E', 'Eletrônicos', 800.00),
('2024-04-02', 'Produto F', 'Roupas', 400.00),
('2024-05-05', 'Produto G', 'Livros', 150.00),
('2024-06-10', 'Produto H', 'Eletrônicos', 1000.00),
('2024-07-20', 'Produto I', 'Roupas', 600.00),
('2024-08-25', 'Produto J', 'Eletrônicos', 700.00),
('2024-09-30', 'Produto K', 'Livros', 300.00),
('2024-10-05', 'Produto L', 'Roupas', 450.00),
('2024-11-15', 'Produto M', 'Eletrônicos', 900.00),
('2024-12-20', 'Produto N', 'Livros', 250.00);
''')

# Salvar alterações e fechar cursor
conexao.commit()

# Passo 3: Analise dos dados
import pandas as pd

# Ler os dados da tabela vendas1 para um DataFrame
df_vendas = pd.read_sql_query("SELECT * FROM vendas1", conexao)

# Converter a coluna 'data_venda' para o tipo datetime
df_vendas['data_venda'] = pd.to_datetime(df_vendas['data_venda'])

# Verificar os 5 primeiros registros
print(df_vendas.head())
# Vendas totais
vendas_totais = df_vendas['valor_venda'].sum()
print(f"Vendas totais: R${vendas_totais:.2f}")

# Passo 4: Visualização dos dados em gráficos

# Vendas por categoria
vendas_por_categoria = df_vendas.groupby('categoria')['valor_venda'].sum().sort_values(ascending=False)
print("\nVendas por categoria:")
print(vendas_por_categoria)

# Vendas por mês
df_vendas['mes'] = df_vendas['data_venda'].dt.to_period('M')
vendas_mensais = df_vendas.groupby('mes')['valor_venda'].sum()
print("\nVendas mensais:")
print(vendas_mensais)
import matplotlib.pyplot as plt
import seaborn as sns

# Estilo visual do seaborn
sns.set(style="whitegrid")

# Gráfico de barras - Vendas por categoria
plt.figure(figsize=(8, 5))
sns.barplot(x=vendas_por_categoria.index, y=vendas_por_categoria.values, palette='Blues_d')
plt.title('Vendas por Categoria')
plt.ylabel('Valor das Vendas (R$)')
plt.xlabel('Categoria')
plt.tight_layout()
plt.show()

# Gráfico de linha - Vendas mensais
plt.figure(figsize=(10, 5))
vendas_mensais.index = vendas_mensais.index.astype(str)  # para exibir no eixo X
sns.lineplot(x=vendas_mensais.index, y=vendas_mensais.values, marker='o')
plt.title('Vendas Mensais em 2024')
plt.ylabel('Valor das Vendas (R$)')
plt.xlabel('Mês')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
